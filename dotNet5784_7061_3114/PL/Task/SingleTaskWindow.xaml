<Window x:Class="PL.Task.SingleTaskWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Task"
        mc:Ignorable="d"
        DataContext="{Binding Task, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
        Title="SingleTaskWindow" Height="600" Width="529" Icon="/Task/completed.png">
    <Window.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#E0E0E0" Offset="0"/>
                <GradientStop Color="#FFFFFF" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
    </Window.Background>
    <ScrollViewer Height="550" HorizontalAlignment="Center" VerticalAlignment="Center" Width="509">
        <StackPanel Margin="10">
            <!-- Created At Date -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Created At Date:" VerticalAlignment="Center"/>
                <DatePicker SelectedDate="{Binding CreatedAtDate, UpdateSourceTrigger=PropertyChanged}" Margin="5"
                            IsEnabled="{Binding CreatedAtDate,Converter={StaticResource scheduleWasPalnnedIsNotEnabledKey}}"/>

            </StackPanel>

            <!-- Start Date -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Start Date:" VerticalAlignment="Center"/>
                <DatePicker SelectedDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged}" Margin="5"
                             IsEnabled="{Binding StartDate , Converter={StaticResource scheduleWasPalnnedIsEnabledKey}}"/>
            </StackPanel>

            <!-- Scheduled Date -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Scheduled Date:" VerticalAlignment="Center"/>
                <DatePicker SelectedDate="{Binding ScheduledDate, UpdateSourceTrigger=PropertyChanged}" Margin="5"
                            IsEnabled="{Binding ScheduledDate , Converter={StaticResource scheduleWasPalnnedIsNotEnabledKey}}" />
            </StackPanel>

            <!-- Complete Date -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Complete Date:" VerticalAlignment="Center"/>
                <DatePicker SelectedDate="{Binding CompleteDate, UpdateSourceTrigger=PropertyChanged}" Margin="5"
                            IsEnabled="{Binding CompleteDate , Converter={StaticResource scheduleWasPalnnedIsEnabledKey}}" />
            </StackPanel>

            <!-- Forecast Date -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Forecast Date:" VerticalAlignment="Center"/>
                <DatePicker SelectedDate="{Binding ForcastDate, UpdateSourceTrigger=PropertyChanged}" Margin="5" IsEnabled="False"/>
            </StackPanel>

            <!-- Id -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Id:" VerticalAlignment="Center"/>
                <TextBox Text="{Binding Id, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="70" IsEnabled="False"/>
            </StackPanel>

            <!-- Description -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Description:" VerticalAlignment="Center"/>
                <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="Auto" />
            </StackPanel>

            <!-- Alias -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Alias:" VerticalAlignment="Center"/>
                <TextBox Text="{Binding Alias, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="200"/>
            </StackPanel>

            <!-- Remarks -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Remarks:" VerticalAlignment="Center"/>
                <TextBox Text="{Binding Remarks, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="Auto"/>
            </StackPanel>

            <!-- Required Effort Time -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Required Effort Time:" VerticalAlignment="Center"/>
                <TextBox Text="{Binding RequiredEffortTime, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="100"
                         IsEnabled="{Binding RequiredEffortTime , Converter={StaticResource scheduleWasPalnnedIsNotEnabledKey}}" />
            </StackPanel>

            <!-- Deliverables -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Deliverables:" VerticalAlignment="Center"/>
                <TextBox Text="{Binding Deliverables, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="200"/>
            </StackPanel>

            <!-- Status -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Status:" VerticalAlignment="Center"/>
                <ComboBox ItemsSource="{Binding Source={StaticResource StatusCollectiontKey}}"
                          SelectedItem="{Binding Status, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="100" IsEnabled="False"/>
            </StackPanel>

            <!-- Complexity -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Complexity:" VerticalAlignment="Center"/>
                <ComboBox ItemsSource="{Binding Source={StaticResource ExperienceCollectionKey}}"
                          SelectedItem="{Binding Copmliexity, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="100"/>
            </StackPanel>

            <!-- Engineer details -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <!-- Stack panel containing the layout horizontally with a margin of 5 -->
                <Label Content="Engineer Id:" VerticalAlignment="Center"/>
                <!-- Label indicating "Engineer Id" aligned vertically to the center -->
                <TextBox Text="{Binding Engineer.Id, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="50" 
             IsEnabled="{Binding Engineer.Id, Converter={StaticResource scheduleWasPalnnedIsEnabledKey}}">
                    <!-- Text box bound to the Engineer's Id property, updating the source on PropertyChanged -->
                    <TextBox.Style>
                        <!-- Style for the text box -->
                        <Style TargetType="TextBox">
                            <!-- Style targeting the TextBox -->
                            <Style.Triggers>
                                <!-- Triggers for the style -->
                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="0">
                                    <!-- Data trigger checking if the text in the TextBox is zero -->
                                    <Setter Property="Background" Value="Red"/>
                                    <!-- If the trigger is met, change the background color of the TextBox to red -->
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <Label Content="Engineer Name:" VerticalAlignment="Center"/>
                <!-- Label indicating "Engineer Name" aligned vertically to the center -->
                <TextBox Text="{Binding Engineer.Name, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="100" 
                        IsEnabled="False" >
                </TextBox>
            </StackPanel>


            <!-- Dependencies -->
            <ListView ItemsSource="{Binding Dependencies}" Margin="5" MouseDoubleClick="DeleteDependecy_MouseDoubleClick" 
                      IsEnabled="{Binding Dependencies, Converter={StaticResource scheduleWasPalnnedIsNotEnabledKey}}" >
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Dependencies" DisplayMemberBinding="{Binding}" />
                    </GridView>
                </ListView.View>
            </ListView>

            <!-- Edit Dependencies Button -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Button Content="Add dependencies" Width="110" Height="30" Margin="5" Click="EditDependenciesButton_Click"
                         IsEnabled="{Binding Dependencies, Converter={StaticResource scheduleWasPalnnedIsNotEnabledKey}}" >
                    <Button.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#64B5F6" Offset="0"/>
                            <GradientStop Color="#BBDEFB" Offset="0.5"/>
                            <GradientStop Color="#E3F2FD" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
            </StackPanel>

            <!-- Active -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="Active:" VerticalAlignment="Center"/>
                <CheckBox IsChecked="{Binding Active, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>
            </StackPanel>

            <Button Content="{Binding Id, Mode=OneTime, Converter={StaticResource ConverIdToContentKey}}" Width="115" Height="55" Margin="5,20,5,5" Click="btnAddUpdateTask_Click">
                <Button.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="LightBlue" Offset="0.1"/>
                        <GradientStop Color="LightGray" Offset="0.5"/>
                        <GradientStop Color="White" Offset="0.9"/>
                    </LinearGradientBrush>
                </Button.Background>
            </Button>

            <StackPanel Orientation="Horizontal" Margin="5">
                <Button Content="Delete" Width="110" Height="30" Margin="5" Click="DeleteButton_Click"
         IsEnabled="{Binding Dependencies, Converter={StaticResource scheduleWasPalnnedIsNotEnabledKey}}" >
                    <Button.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#64B5F6" Offset="0"/>
                            <GradientStop Color="#BBDEFB" Offset="0.5"/>
                            <GradientStop Color="#E3F2FD" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>

    
</Window>
